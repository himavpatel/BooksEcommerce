@model BooksEcommerce.ViewModels.RegisterVM
@{
    ViewData["Title"] = "Register";
}

<div class="row d-flex justify-content-center mt-4">
    <div class="col-md-4 card p-4">

        <h2 class="text-center text-info">Register</h2>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }

        <form asp-controller="Account" asp-action="Register" method="post">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="mb-4">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="mb-4">
                <label asp-for="Password"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="mb-4">
                <label asp-for="ConfirmPassword"></label>
                <input asp-for="ConfirmPassword" class="form-control" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-8">
                    <a asp-action="Login" class="text-decoration-none float-start mt-2">Have account</a>
                </div>

                <div class="col-4">
                    <input type="submit" value="Login" class="btn btn-primary float-end" />
                </div>
            </div>

        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

